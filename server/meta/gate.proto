syntax = "proto3";
package candy.meta;

option go_package = "meta";

import "common.proto";


service Gate {
    rpc Register (UserRegisterRequest) returns (UserRegisterResponse);
    rpc UpdateUserInfo (UpdateUserInfoRequest) returns (UpdateUserInfoResponse);
    rpc UpdateUserPassword (UpdateUserPasswordRequest) returns (UpdateUserPasswordResponse);
    rpc UserInfo (UserInfoRequest) returns (UserInfoResponse);

    rpc Login (UserLoginRequest) returns (UserLoginResponse);
    rpc Logout (UserLogoutRequest) returns (UserLoginResponse);

    rpc UserMessage (stream Message) returns (stream Message);

    // AddFriend 添加好友或确认接受添加.
    rpc AddFriend (UserAddFriendRequest) returns (UserAddFriendResponse);
    // FindUser 添加好友前先查找出来对应的ID.
    rpc FindUser (UserFindUserRequest) returns (UserFindUserResponse);

    rpc CreateGroup (UserCreateGroupRequest) returns (UserCreateGroupResponse);

    rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);

    rpc UploadImage (UploadImageRequest) returns (UploadImageResponse);
    rpc DownloadImage (DownloadImageRequest) returns (DownloadImageResponse);


    // server interface.
    rpc Notice (NoticeRequest) returns (NoticeResponse);

}

message UserFindUserRequest {
    string User = 1;
}

message UserFindUserResponse {
    ResponseHeader header = 1;
    int64 ID = 2;

}

message UserAddFriendRequest {
    int64 UserID = 1;
    bool Confirm = 2;
}

message UserAddFriendResponse {
    ResponseHeader header = 1;
    bool Confirm = 2;
}

message UserCreateGroupRequest {
}

message UserCreateGroupResponse {
    ResponseHeader header = 1;
    int64 ID = 2;
}


message UserRegisterRequest {
    string User = 1;
    string Password = 2;
}

message UserRegisterResponse {
    ResponseHeader header = 1;
    int64 ID = 2;
}

message UpdateUserInfoRequest {
    string User = 1;
    string NickName = 2;
    bytes Avatar = 3;
}

message UpdateUserInfoResponse {
    ResponseHeader header = 1;
    int64 ID = 2;
}

message UpdateUserPasswordRequest {
    string User = 1;
    string Password = 2;
}

message UpdateUserPasswordResponse {
    ResponseHeader header = 1;
    int64 ID = 2;
}

message UserInfoRequest {
    string User = 1;
}

message UserInfoResponse {
    ResponseHeader header = 1;
    int64 ID = 2;
    string User = 3;
    string NickName = 4;
    bytes Avatar = 5;
}


message HeartbeatRequest { }

message HeartbeatResponse {}

message UserLoginRequest {
    string User = 1;
    string Password = 2;
}

message UserLoginResponse {
    ResponseHeader header = 1;
    int64 ID = 2;
}


message UserLogoutRequest {}

message UserLogoutResponse {
    ResponseHeader header = 1;
}


message UploadImageRequest {
    bytes Image = 1;
}

message UploadImageResponse {
    ResponseHeader header = 1;
    int64 ImageID = 2;
}

message DownloadImageRequest {
    repeated int64 ImageID = 1;
}
message DownloadImageResponse {
    ResponseHeader header = 1;
    repeated bytes Image = 2;
}


message NoticeRequest {
    int64 ChannelID = 1;
    Message Msg = 2;
}


message NoticeResponse {
    ResponseHeader header = 1;
}

